"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cell = void 0;
class Cell {
    static getAttributeTypeMap() {
        return Cell.attributeTypeMap;
    }
}
exports.Cell = Cell;
Cell.discriminator = undefined;
Cell.attributeTypeMap = [
    {
        "name": "isNoBorder",
        "baseName": "IsNoBorder",
        "type": "boolean"
    },
    {
        "name": "margin",
        "baseName": "Margin",
        "type": "MarginInfo"
    },
    {
        "name": "border",
        "baseName": "Border",
        "type": "BorderInfo"
    },
    {
        "name": "backgroundColor",
        "baseName": "BackgroundColor",
        "type": "Color"
    },
    {
        "name": "backgroundImageFile",
        "baseName": "BackgroundImageFile",
        "type": "string"
    },
    {
        "name": "backgroundImageStorageFile",
        "baseName": "BackgroundImageStorageFile",
        "type": "string"
    },
    {
        "name": "alignment",
        "baseName": "Alignment",
        "type": "HorizontalAlignment"
    },
    {
        "name": "defaultCellTextState",
        "baseName": "DefaultCellTextState",
        "type": "TextState"
    },
    {
        "name": "paragraphs",
        "baseName": "Paragraphs",
        "type": "Array<TextRect>"
    },
    {
        "name": "isWordWrapped",
        "baseName": "IsWordWrapped",
        "type": "boolean"
    },
    {
        "name": "verticalAlignment",
        "baseName": "VerticalAlignment",
        "type": "VerticalAlignment"
    },
    {
        "name": "colSpan",
        "baseName": "ColSpan",
        "type": "number"
    },
    {
        "name": "rowSpan",
        "baseName": "RowSpan",
        "type": "number"
    },
    {
        "name": "width",
        "baseName": "Width",
        "type": "number"
    },
    {
        "name": "htmlFragment",
        "baseName": "HtmlFragment",
        "type": "string"
    },
    {
        "name": "images",
        "baseName": "Images",
        "type": "Array<ImageFragment>"
    }
];
//# sourceMappingURL=cell.js.map